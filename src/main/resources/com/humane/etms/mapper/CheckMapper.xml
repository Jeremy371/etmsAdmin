<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.humane.etms.mapper.CheckMapper">

    <select id="paper" resultType="com.humane.etms.dto.StatusDto">
        SELECT DISTINCT a.attend_cd, a.examinee_cd
            , if(a.attend_hall_cd is null , false,true) as is_attend
            , b.paper_cd as last_paper_cd, b.reg_dttm
            , if(b.paper_cd is null, false, true) as is_paper
            , d.admission_nm
            , c.type_nm, c.attend_date, c.attend_time
            , e.examinee_nm, e.major_nm
            , h.head_nm as attend_head_nm
            , h.bldg_nm as attend_bldg_nm
            , h.hall_nm as attend_hall_nm
        FROM attend_map a
            inner join attend c on a.attend_cd = c.attend_cd
            inner join admission d on c.admission_cd = d.admission_cd
            inner join examinee e on a.examinee_cd = e.examinee_cd
            left join hall h on a.attend_hall_cd = h.hall_cd
            left join (SELECT  @row_num := IF(@prev_value=attend_paper.examinee_cd,@row_num+1,1) AS rn
                           ,attend_paper.examinee_cd
                           ,attend_paper.attend_cd
                           ,attend_paper.reg_dttm
                           ,attend_paper.paper_cd
                           ,@prev_value := attend_paper.examinee_cd
                       FROM attend_paper, attend, admission,
                           (SELECT @row_num := 1, @prev_value := '') x
                       <where>
                           attend_paper.attend_cd = attend.attend_cd
                           and attend.admission_cd = admission.admission_cd
                           and attend.paper_cnt > 0
                           <if test="param != null">
                               <if test="param.admissionNm != null">and admission.admission_nm = #{param.admissionNm}</if>
                               <if test="param.typeNm != null">and attend.type_nm = #{param.typeNm}</if>
                               <if test="param.attendDate != null">and attend.attend_date = #{param.attendDate}</if>
                               <if test="param.attendTime != null">and attend.attend_time = DATE_FORMAT(#{param.attendTime}, '%T')</if>
                           </if>
                       </where>
                       ORDER BY attend_paper.examinee_cd, attend_paper.reg_dttm DESC
                      ) b
                on a.attend_cd = b.attend_cd and a.examinee_cd = b.examinee_cd and b.rn = 1
        <where>
            -- 답안지가 있는 시험만을 포함한다.
            c.paper_cnt > 0
            and(
                (
                -- 단순 출결 및 답안지 매칭으로 구분
                    -- 정상적인 케이스
                    -- 1. 답안지 번호가 없고 응시를 하지 않은 사람과 2. 답안지 번호가 있고 응시를 한 사람 / 제외한다.
                    not ((if(b.paper_cd is null, false, true) = false and if(a.attend_hall_cd is null, false, true) = false)
                        or (if(b.paper_cd is null, false, true) = true and if(a.attend_hall_cd is null, false, true) = true)
                    )
                    -- 비정상적인 케이스
                    -- 3. 답안지 번호가 없고 응시를 한 사람과 4. 답안지 번호가 있고 응시를 하지 않은 사람 / 선택한다.
                    and((a.attend_hall_cd is not null and b.paper_cd is null)
                        or (a.attend_hall_cd is null and b.paper_cd is not null))
                )
                -- 답안지 이상 구분
                    -- 5. 답안지 번호에 문자가 섞여있거나 6. 자릿수가 맞지 않는 경우 7. 바코드 시작 값이 다른 경우 / 선택한다.
                    or (b.paper_cd regexp '^[0-9]+$' != 1 or length(b.paper_cd) != c.paper_len or left(b.paper_cd, 1) != c.paper_header)
                    -- 8. 최종 답안지가 중복된 경우
                    or (select count(*) from attend_paper where b.paper_cd = attend_paper.paper_cd) > 1
            )
            <if test="param != null">
                <if test="param.admissionNm != null">and d.admission_nm = #{param.admissionNm}</if>
                <if test="param.typeNm != null">and c.type_nm = #{param.typeNm}</if>
                <if test="param.attendDate != null">and  c.attend_date = #{param.attendDate}</if>
                <if test="param.attendTime != null">and c.attend_time = DATE_FORMAT(#{param.attendTime}, '%T')</if>
                <if test="param.majorNm != null">and e.major_nm = #{param.majorNm}</if>
                <if test="param.examineeCd != null">and e.examinee_cd = #{param.examineeCd}</if>
                <if test="param.examineeNm != null">and e.examinee_nm = #{param.examineeNm}</if>
                <if test="param.attendHeadNm != null">and h.head_nm = #{param.attendHeadNm}</if>
                <if test="param.attendBldgNm != null">and h.bldg_nm = #{param.attendBldgNm}</if>
                <if test="param.attendHallNm != null">and h.hall_nm = #{param.attendHallNm}</if>
                <if test="param.isAttend != null">
                    <if test="param.isAttend == true">AND a.attend_hall_cd IS NOT NULL</if>
                    <if test="param.isAttend == false">AND a.attend_hall_cd IS NULL</if>
                </if>
                <if test="param.paperCd != null">AND b.paper_cd = #{param.paperCd}</if>
                <if test="param.userAdmissions != null">AND c.admission_cd IN (${param.userAdmissions})</if>
            </if>
        </where>
    </select>

    <select id="recheck" resultType="com.humane.etms.dto.StatusDto">
        SELECT *
        FROM (
        SELECT
        admission.admission_nm, attend.type_nm,
        attend.attend_date, attend.attend_time,
        examinee.examinee_cd, examinee.examinee_nm,
            date_format(examinee.birth, '%y-%m-%d') as birth, examinee.dept_nm, examinee.major_nm,

        attend_hall.head_nm AS attend_head_nm,
        attend_hall.bldg_nm AS attend_bldg_nm,
        attend_hall.hall_cd AS attend_hall_cd,
        attend_hall.hall_nm AS attend_hall_nm,

        CASE WHEN
        (SELECT count(attend_paper.examinee_cd) FROM attend_paper
        WHERE attend_map.attend_hall_cd IS NOT NULL ) > 0
        THEN TRUE
        ELSE FALSE END AS is_attend,

        CASE WHEN
        (SELECT COUNT(*) FROM attend_paper
        WHERE attend_map.examinee_cd = attend_paper.examinee_cd AND attend_map.attend_hall_cd IS NOT NULL) > 0
        THEN TRUE
        ELSE FALSE END AS is_paper,

        (SELECT paper_cd FROM attend_paper WHERE attend_paper.attend_cd = attend_map.attend_cd AND
        attend_paper.examinee_cd = attend_map.examinee_cd AND attend_paper.paper_no = 1
        ORDER BY reg_dttm DESC LIMIT 1) AS last_paper_cd

        FROM attend_map
        INNER JOIN attend ON attend.attend_cd = attend_map.attend_cd
        INNER JOIN admission ON admission.admission_cd = attend.admission_cd
        INNER JOIN hall ON hall.hall_cd = attend_map.hall_cd
        INNER JOIN examinee ON examinee.examinee_cd = attend_map.examinee_cd
        LEFT JOIN hall attend_hall ON attend_hall.hall_cd = attend_map.attend_hall_cd
        WHERE
        (SELECT COUNT(*) FROM attend_paper
        WHERE attend_map.examinee_cd = attend_paper.examinee_cd OR attend_map.attend_hall_cd IS NOT NULL) > 0
        GROUP BY
        admission.admission_nm, attend.type_nm,
        attend.attend_date, attend.attend_time,
        examinee.examinee_cd, examinee.examinee_nm, examinee.major_nm
        ) AS result
        WHERE NOT (is_attend = is_paper AND is_attend = 1)
    </select>

    <select id="device" resultType="com.humane.etms.dto.StatusDto">
        SELECT admission.admission_nm,
        attend.type_nm,
        attend.attend_nm,
        attend.attend_date,
        attend.attend_time,
        attend_device.device_no,
        device.uuid,
        device.phone_no,
        hall.head_nm,
        hall.bldg_nm,
        hall.hall_nm,
        device.reg_dttm,
        attend_device.send_dttm
        FROM attend
        INNER JOIN attend_device ON attend_device.attend_cd = attend.attend_cd AND attend.attend_cd = attend_device.attend_cd
        INNER JOIN admission ON attend.admission_cd = admission.admission_cd
        INNER JOIN attend_map ON attend_map.attend_cd = attend.attend_cd
        INNER JOIN hall ON attend_device.hall_cd = hall.hall_cd
        INNER JOIN device ON attend_device.device_no = device.device_no
        <where>
            <if test="param != null">
                <if test="param.admissionNm != null">AND admission.admission_nm = #{param.admissionNm}</if>
                <if test="param.typeNm != null">AND attend.type_nm = #{param.typeNm}</if>
                <if test="param.attendDate != null">AND attend.attend_date = #{param.attendDate}</if>
                <if test="param.attendTime != null">AND attend.attend_time = DATE_FORMAT(#{param.attendTime}, '%T')</if>
                <if test="param.headNm != null">AND hall.head_nm = #{param.headNm}</if>
                <if test="param.bldgNm != null">AND hall.bldg_nm = #{param.bldgNm}</if>
                <if test="param.hallNm != null">AND hall.hall_nm = #{param.hallNm}</if>
                <if test="param.deviceNo != null">AND attend_device.device_no LIKE '%' #{param.deviceNo} '%'</if>
                <if test="param.userAdmissions != null">AND attend.admission_cd IN (${param.userAdmissions})</if>
            </if>
        </where>
        GROUP BY
        admission.admission_nm,
        attend.type_nm,
        attend.attend_nm,
        attend.attend_date,
        attend.attend_time,
        attend_device.device_no,
        device.uuid,
        device.phone_no,
        hall.head_nm,
        hall.bldg_nm,
        hall.hall_nm,
        device.reg_dttm,
        attend_device.send_dttm
    </select>

    <select id="signature" resultType="com.humane.etms.dto.StatusDto">
        SELECT admission.admission_nm
             , attend.attend_cd, attend.type_nm, attend.attend_date, attend.attend_time
             , hall.hall_cd, hall.head_nm, hall.bldg_nm, hall.hall_nm
             , CASE WHEN attend_hall.sign_dttm IS NULL THEN 0 ELSE 1 END AS is_signature
             , attend_hall.sign_dttm
          FROM attend_hall
         INNER JOIN attend ON attend_hall.attend_cd = attend.attend_cd
         INNER JOIN admission ON attend.admission_cd = admission.admission_cd
         INNER JOIN hall ON attend_hall.hall_cd = hall.hall_cd
        <where>
            <if test="param != null">
                <if test="param.admissionNm != null">AND admission.admission_nm = #{param.admissionNm}</if>
                <if test="param.typeNm != null">AND attend.type_nm = #{param.typeNm}</if>
                <if test="param.attendDate != null">AND attend.attend_date = #{param.attendDate}</if>
                <if test="param.attendTime != null">AND attend.attend_time = DATE_FORMAT(#{param.attendTime}, '%T')</if>
                <if test="param.headNm != null">AND hall.head_nm = #{param.headNm}</if>
                <if test="param.bldgNm != null">AND hall.bldg_nm = #{param.bldgNm}</if>
                <if test="param.hallNm != null">AND hall.hall_nm = #{param.hallNm}</if>
                <if test="param.isSignature != null">
                    <if test="param.isSignature == true">AND attend_hall.sign_dttm IS NOT NULL</if>
                    <if test="param.isSignature == false">AND attend_hall.sign_dttm IS NULL</if>
                </if>
                <if test="param.userAdmissions != null">AND attend.admission_cd IN (${param.userAdmissions})</if>
            </if>
        </where>
    </select>
</mapper>
