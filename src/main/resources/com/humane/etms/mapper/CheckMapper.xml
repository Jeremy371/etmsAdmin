<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.humane.etms.mapper.CheckMapper">

    <select id="paper" resultType="com.humane.etms.dto.StatusDto">
        SELECT DISTINCT a.attend_cd, a.examinee_cd
            , if(a.attend_hall_cd is null , false,true) as is_attend
            , b.paper_cd as last_paper_cd, b.reg_dttm
            , if(b.paper_cd is null, false, true) as is_paper
            , d.admission_nm
            , c.type_nm, c.attend_date, c.attend_time
            , e.examinee_nm, e.major_nm
            , h.head_nm as attend_head_nm
            , h.bldg_nm as attend_bldg_nm
            , h.hall_nm as attend_hall_nm
        FROM attend_map a
            inner join attend c on a.attend_cd = c.attend_cd
            inner join admission d on c.admission_cd = d.admission_cd
            inner join examinee e on a.examinee_cd = e.examinee_cd
            left join hall h on a.attend_hall_cd = h.hall_cd
            left join (SELECT  @row_num := IF(@prev_value=attend_paper.examinee_cd,@row_num+1,1) AS rn
                           ,attend_paper.examinee_cd
                           ,attend_paper.attend_cd
                           ,(select a.reg_dttm from attend_paper a where attend_paper.attend_cd = a.attend_cd and attend_paper.examinee_cd = a.examinee_cd order by a.reg_dttm desc limit 1) as reg_dttm
                           ,(select a.paper_cd from attend_paper a where attend_paper.attend_cd = a.attend_cd and attend_paper.examinee_cd = a.examinee_cd order by a.reg_dttm desc limit 1) as paper_cd
                           ,@prev_value := attend_paper.examinee_cd
                       FROM attend_paper, attend, admission,
                           (SELECT @row_num := 1, @prev_value := '') x
                       <where>
                           attend_paper.attend_cd = attend.attend_cd
                           and attend.admission_cd = admission.admission_cd
                           and attend.paper_cnt > 0
                           <if test="param != null">
                               <if test="param.admissionNm != null">and admission.admission_nm = #{param.admissionNm}</if>
                               <if test="param.typeNm != null">and attend.type_nm = #{param.typeNm}</if>
                               <if test="param.attendDate != null">and attend.attend_date = #{param.attendDate}</if>
                               <if test="param.attendTime != null">and attend.attend_time = DATE_FORMAT(#{param.attendTime}, '%T')</if>
                           </if>
                       </where>
                       GROUP BY attend_paper.examinee_cd
                       ORDER BY attend_paper.examinee_cd, attend_paper.reg_dttm DESC
                      ) b
                on a.attend_cd = b.attend_cd and a.examinee_cd = b.examinee_cd and b.rn = 1
        <where>
            -- 답안지가 있는 시험만을 포함한다.
            c.paper_cnt > 0 and (select attend_map.attend_dttm from attend_map where attend_map.attend_cd = a.attend_cd and attend_map.examinee_cd = a.examinee_cd) is not null
            and(
                (
                -- 단순 출결 및 답안지 매칭으로 구분
                    -- 정상적인 케이스
                    -- 1. 답안지 번호가 없고 응시를 하지 않은 사람과 2. 답안지 번호가 있고 응시를 한 사람 / 제외한다.
                    not ((if(b.paper_cd is null, false, true) = false and if(a.attend_hall_cd is null, false, true) = false)
                        or (if(b.paper_cd is null, false, true) = true and if(a.attend_hall_cd is null, false, true) = true)
                    )
                    -- 비정상적인 케이스
                    -- 3. 답안지 번호가 없고 응시를 한 사람과 4. 답안지 번호가 있고 응시를 하지 않은 사람 / 선택한다.
                    and((a.attend_hall_cd is not null and b.paper_cd is null)
                        or (a.attend_hall_cd is null and b.paper_cd is not null))
                )
                -- 답안지 이상 구분
                    -- 5. 답안지 번호에 문자가 섞여있거나 6. 자릿수가 맞지 않는 경우 7. 바코드 시작 값이 다른 경우 / 선택한다.
                    or (b.paper_cd regexp '^[0-9]+$' != 1 or length(b.paper_cd) != c.paper_len or left(b.paper_cd, 1) != c.paper_header)
                    -- 8. 최종 답안지가 중복된 경우
                    or (select count(*)
                        from attend_paper
                        inner join attend_map on attend_map.attend_cd = attend_paper.attend_cd and attend_map.examinee_cd = attend_paper.examinee_cd
                        where attend_paper.new_paper_cd is null
                          and attend_map.attend_dttm is not null
                          and attend_paper.attend_cd = a.attend_cd
                          and attend_paper.paper_cd = b.paper_cd) > 1
            )
            <if test="param != null">
                <if test="param.admissionNm != null">and d.admission_nm = #{param.admissionNm}</if>
                <if test="param.typeNm != null">and c.type_nm = #{param.typeNm}</if>
                <if test="param.attendDate != null">and  c.attend_date = #{param.attendDate}</if>
                <if test="param.attendTime != null">and c.attend_time = DATE_FORMAT(#{param.attendTime}, '%T')</if>
                <if test="param.majorNm != null">and e.major_nm = #{param.majorNm}</if>
                <if test="param.examineeCd != null">and e.examinee_cd = #{param.examineeCd}</if>
                <if test="param.examineeNm != null">and e.examinee_nm = #{param.examineeNm}</if>
                <if test="param.attendHeadNm != null">and h.head_nm = #{param.attendHeadNm}</if>
                <if test="param.attendBldgNm != null">and h.bldg_nm = #{param.attendBldgNm}</if>
                <if test="param.attendHallNm != null">and h.hall_nm = #{param.attendHallNm}</if>
                <if test="param.isAttend != null">
                    <if test="param.isAttend == true">AND a.attend_hall_cd IS NOT NULL</if>
                    <if test="param.isAttend == false">AND a.attend_hall_cd IS NULL</if>
                </if>
                <if test="param.paperCd != null">AND b.paper_cd = #{param.paperCd}</if>
                <if test="param.userAdmissions != null">AND c.admission_cd IN (${param.userAdmissions})</if>
            </if>
        </where>
    </select>
</mapper>
