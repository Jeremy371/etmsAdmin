<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.humane.etms.mapper.CheckMapper">

    <select id="paper" resultType="com.humane.etms.dto.StatusDto">
        SELECT DISTINCT a.attend_cd, a.examinee_cd
            , if(a.attend_hall_cd is null , false,true) as is_attend
            , b.paper_cd as last_paper_cd, b.reg_dttm
            , if(b.paper_cd is null, false, true) as is_paper
            , d.admission_nm
            , c.type_nm, c.attend_date, c.attend_time
            , e.examinee_nm, e.major_nm
            , h.head_nm as attend_head_nm
            , h.bldg_nm as attend_bldg_nm
            , h.hall_nm as attend_hall_nm
        FROM attend_map a
            inner join attend c on a.attend_cd = c.attend_cd
            inner join admission d on c.admission_cd = d.admission_cd
            inner join examinee e on a.examinee_cd = e.examinee_cd
            left join hall h on a.attend_hall_cd = h.hall_cd
            left join (SELECT  @row_num := IF(@prev_value=attend_paper.examinee_cd,@row_num+1,1) AS rn
                           ,attend_paper.examinee_cd
                           ,attend_paper.attend_cd
                           ,(select a.reg_dttm from attend_paper a where attend_paper.attend_cd = a.attend_cd and attend_paper.examinee_cd = a.examinee_cd order by a.reg_dttm desc limit 1) as reg_dttm
                           ,(select a.paper_cd from attend_paper a where attend_paper.attend_cd = a.attend_cd and attend_paper.examinee_cd = a.examinee_cd order by a.reg_dttm desc limit 1) as paper_cd
                           ,@prev_value := attend_paper.examinee_cd
                       FROM attend_paper, attend, admission,
                           (SELECT @row_num := 1, @prev_value := '') x
                       <where>
                           attend_paper.attend_cd = attend.attend_cd
                           and attend.admission_cd = admission.admission_cd
                           and attend.paper_cnt > 0
                           <if test="param != null">
                               <if test="param.admissionNm != null">and admission.admission_nm = #{param.admissionNm}</if>
                               <if test="param.typeNm != null">and attend.type_nm = #{param.typeNm}</if>
                               <if test="param.attendDate != null">and attend.attend_date = #{param.attendDate}</if>
                               <if test="param.attendTime != null">and attend.attend_time = DATE_FORMAT(#{param.attendTime}, '%T')</if>
                           </if>
                       </where>
                       GROUP BY attend_paper.examinee_cd
                       ORDER BY attend_paper.examinee_cd, attend_paper.reg_dttm DESC
                      ) b
                on a.attend_cd = b.attend_cd and a.examinee_cd = b.examinee_cd and b.rn = 1
        <where>
            -- 답안지가 있는 시험만을 포함한다.
            c.paper_cnt > 0 and (select attend_map.attend_dttm from attend_map where attend_map.attend_cd = a.attend_cd and attend_map.examinee_cd = a.examinee_cd) is not null
            and(
                (
                -- 단순 출결 및 답안지 매칭으로 구분
                    -- 정상적인 케이스
                    -- 1. 답안지 번호가 없고 응시를 하지 않은 사람과 2. 답안지 번호가 있고 응시를 한 사람 / 제외한다.
                    not ((if(b.paper_cd is null, false, true) = false and if(a.attend_hall_cd is null, false, true) = false)
                        or (if(b.paper_cd is null, false, true) = true and if(a.attend_hall_cd is null, false, true) = true)
                    )
                    -- 비정상적인 케이스
                    -- 3. 답안지 번호가 없고 응시를 한 사람과 4. 답안지 번호가 있고 응시를 하지 않은 사람 / 선택한다.
                    and((a.attend_hall_cd is not null and b.paper_cd is null)
                        or (a.attend_hall_cd is null and b.paper_cd is not null))
                )
                -- 답안지 이상 구분
                    -- 5. 답안지 번호에 문자가 섞여있거나 6. 자릿수가 맞지 않는 경우 7. 바코드 시작 값이 다른 경우 / 선택한다.
                    or (b.paper_cd regexp '^[0-9]+$' != 1 or length(b.paper_cd) != c.paper_len or left(b.paper_cd, 1) != c.paper_header)
                    -- 8. 최종 답안지가 중복된 경우
                    or (select count(*)
                        from attend_paper
                        inner join attend_map on attend_map.attend_cd = attend_paper.attend_cd and attend_map.examinee_cd = attend_paper.examinee_cd
                        where attend_paper.new_paper_cd is null
                          and attend_map.attend_dttm is not null
                          and attend_paper.attend_cd = a.attend_cd
                          and attend_paper.paper_cd = b.paper_cd) > 1
            )
            <if test="param != null">
                <if test="param.admissionNm != null">and d.admission_nm = #{param.admissionNm}</if>
                <if test="param.typeNm != null">and c.type_nm = #{param.typeNm}</if>
                <if test="param.attendDate != null">and  c.attend_date = #{param.attendDate}</if>
                <if test="param.attendTime != null">and c.attend_time = DATE_FORMAT(#{param.attendTime}, '%T')</if>
                <if test="param.majorNm != null">and e.major_nm = #{param.majorNm}</if>
                <if test="param.examineeCd != null">and e.examinee_cd = #{param.examineeCd}</if>
                <if test="param.examineeNm != null">and e.examinee_nm = #{param.examineeNm}</if>
                <if test="param.attendHeadNm != null">and h.head_nm = #{param.attendHeadNm}</if>
                <if test="param.attendBldgNm != null">and h.bldg_nm = #{param.attendBldgNm}</if>
                <if test="param.attendHallNm != null">and h.hall_nm = #{param.attendHallNm}</if>
                <if test="param.isAttend != null">
                    <if test="param.isAttend == true">AND a.attend_hall_cd IS NOT NULL</if>
                    <if test="param.isAttend == false">AND a.attend_hall_cd IS NULL</if>
                </if>
                <if test="param.paperCd != null">AND b.paper_cd = #{param.paperCd}</if>
                <if test="param.userAdmissions != null">AND c.admission_cd IN (${param.userAdmissions})</if>
            </if>
        </where>
    </select>

    <select id="detect1" resultType="com.humane.etms.dto.StatusDto">
        select admission.admission_nm, attend.type_nm, attend.attend_date, attend.attend_time, result.*
        from (select a.attend_cd, a.paper_cd, concat(count(*), '회') as duplicateCnt
                from (select attend_paper.attend_cd, attend_paper.paper_cd, attend_paper.new_paper_cd, attend_paper.reg_dttm
                        from attend_paper
                        where attend_paper.new_paper_cd is null
                     ) a
                group by a.attend_cd, a.paper_cd
             ) result
        inner join attend on attend.attend_cd = result.attend_cd
        inner join admission on admission.admission_cd = attend.admission_cd
        <where> and duplicateCnt > 1
            <if test="param != null">
                <if test="param != null">
                    <if test="param.admissionNm != null"> and admission.admission_nm = #{param.admissionNm} </if>
                    <if test="param.typeNm != null"> and attend.type_nm = #{param.typeNm} </if>
                    <if test="param.attendDate != null"> and attend.attend_date = #{param.attendDate} </if>
                    <if test="param.attendTime != null"> and attend.attend_time = DATE_FORMAT(#{param.attendTime}, '%T')</if>
                </if>
            </if>
        </where>
    </select>

    <select id="detect2" resultType="com.humane.etms.dto.StatusDto">
        select hall.bldg_nm as attendBldgNm, hall.hall_nm as attendHallNm, attend_paper.attend_cd, examinee.examinee_cd, examinee.examinee_nm
            , case when attend_map.attend_dttm is not null then true else false end as is_attend
            , device.device_no, attend_paper.paper_cd, attend_paper.reg_dttm
        from attend_paper
        inner join attend_map on attend_map.attend_cd = attend_paper.attend_cd and attend_map.attend_hall_cd = attend_paper.hall_cd
        inner join hall on hall.hall_cd = attend_paper.hall_cd
        inner join examinee on examinee.examinee_cd = attend_paper.examinee_cd and examinee.examinee_cd = attend_map.examinee_cd
        inner join device on device.device_id = attend_paper.device_id
        <where>
            <if test="param != null">
                <if test="param.attendCd">and attend_paper.attend_cd = #{param.attendCd}</if>
                <if test="param.paperCd">and attend_paper.paper_cd = #{param.paperCd}</if>
            </if>
        </where>
        group by attend_paper.examinee_cd, attend_paper.paper_cd
        order by attend_paper.reg_dttm desc
    </select>

    <select id="invalid" resultType="com.humane.etms.dto.StatusDto">
        select admission.admission_nm
            , attend.type_nm
            , attend.attend_date
            , attend.attend_time
            , examinee.examinee_cd
            , examinee.examinee_nm
            , (select head_nm from hall where hall.hall_cd = attend_map.hall_cd) as attend_head_nm
            , (select bldg_nm from hall where hall.hall_cd = attend_map.hall_cd) as attend_bldg_nm
            , (select hall_nm from hall where hall.hall_cd = attend_map.hall_cd) as attend_hall_nm
            , case when attend_map.attend_dttm is null then false else true end as is_attend
            , attend_paper.paper_cd
            , attend_paper.reg_dttm
        from attend_paper
        inner join attend_map on attend_map.examinee_cd = attend_paper.examinee_cd and attend_map.attend_cd = attend_paper.attend_cd and attend_map.attend_hall_cd = attend_paper.hall_cd
        inner join examinee on examinee.examinee_cd = attend_map.examinee_cd
        inner join attend on attend.attend_cd = attend_map.attend_cd and attend_paper.attend_cd = attend_map.attend_cd
        inner join admission on admission.admission_cd = attend.admission_cd
        inner join hall on hall.hall_cd = attend_paper.hall_cd and hall.hall_cd = attend_map.attend_hall_cd
        <where>
            <if test="way == 'digit'"> and length(trim(attend_paper.paper_cd)) != attend.paper_len</if>
            <if test="way == 'range'"> and cast(attend.first_assign_paper_cd as integer) > cast(attend_paper.paper_cd as integer) or cast(attend_paper.paper_cd as integer) > cast(attend.last_assign_paper_cd as integer)</if>
            <if test="way == 'char'"> and trim(attend_paper.paper_cd) regexp '^[0-9]+$' != 1 </if>
            <if test="param != null">
                <if test="param.admissionNm != null"> and admission.admission_nm = #{param.admissionNm} </if>
                <if test="param.typeNm != null"> and attend.type_nm = #{param.typeNm} </if>
                <if test="param.attendDate != null"> and attend.attend_date = #{param.attendDate} </if>
                <if test="param.attendTime != null"> and attend.attend_time = DATE_FORMAT(#{param.attendTime}, '%T')</if>
            </if>
        </where>
    </select>

    <!--<select id="multiple" resultType="com.humane.etms.dto.StatusDto">
        select distinct result.examinee_cd, result.examinee_nm, concat(cnt, '회') as actionCnt, attend_map.attend_hall_cd, hall.bldg_nm as attend_bldg_nm, hall.hall_nm as attend_hall_nm, device.device_id, device.device_no
                      , result.attend_dttm
                      , case when result.attend_dttm is not null then true else false end as is_attend
                      , result.log_dttm
        from (select a.examinee_cd, examinee.examinee_nm, a.attend_cd, count(*) as cnt, a.attend_dttm, a.log_dttm
              from( select attend_map_log.examinee_cd, attend_map_log.attend_cd, attend_map_log.attend_dttm, attend_map_log.log_dttm
                    from attend_map_log
                    inner join attend on attend.attend_cd = attend_map_log.attend_cd
                    inner join admission on admission.admission_cd = attend.admission_cd
                    <where> and attend.paper_cnt > 0
                        <if test="param != null">
                            <if test="param.admissionNm != null"> and admission.admission_nm = #{param.admissionNm} </if>
                            <if test="param.typeNm != null"> and attend.type_nm = #{param.typeNm} </if>
                            <if test="param.attendDate != null"> and attend.attend_date = #{param.attendDate} </if>
                            <if test="param.attendTime != null"> and attend.attend_time = #{param.attendTime} </if>
                        </if>
                    </where>
                    group by attend_map_log.examinee_cd, attend_map_log.log_dttm
                    order by attend_map_log.examinee_cd, attend_map_log.log_dttm desc
                  ) a
              inner join examinee on examinee.examinee_cd = a.examinee_cd
              <where>
                <if test="param != null">
                    <if test="param.examineeCd != null"> and examinee.examinee_cd = #{param.examineeCd} </if>
                    <if test="param.examineeNm != null"> and examinee.examinee_nm = #{param.examineeNm`} </if>
                </if>
              </where>
              group by a.examinee_cd, a.attend_cd
              order by a.attend_dttm
             ) result
        inner join attend_map on attend_map.attend_cd = result.attend_cd and attend_map.examinee_cd = result.examinee_cd
        inner join device on device.device_id = attend_map.device_id
        inner join hall on hall.hall_cd = attend_map.attend_hall_cd
        where cnt > 1
    </select>-->

    <select id="multiple" resultType="com.humane.etms.dto.StatusDto">
        select distinct admission.admission_nm, attend.type_nm, attend.attend_date, attend.attend_time, result.examinee_cd, result.examinee_nm, concat(cnt, '회') as actionCnt
                    , case when result.attend_dttm is not null then true else false end as is_attend
                    , result.log_dttm
                    from (select a.examinee_cd, examinee.examinee_nm, a.attend_cd, count(*) as cnt, a.attend_dttm, a.log_dttm
                            from( select attend_map_log.examinee_cd, attend_map_log.attend_cd, attend_map_log.attend_dttm, attend_map_log.log_dttm
                                    from attend_map_log
                                    inner join attend on attend.attend_cd = attend_map_log.attend_cd
                                    inner join admission on admission.admission_cd = attend.admission_cd
                                    <where> and attend.paper_cnt > 0
                                        <if test="param != null">
                                            <if test="param.admissionNm != null"> and admission.admission_nm = #{param.admissionNm} </if>
                                            <if test="param.typeNm != null"> and attend.type_nm = #{param.typeNm} </if>
                                            <if test="param.attendDate != null"> and attend.attend_date = #{param.attendDate} </if>
                                            <if test="param.attendTime != null">and attend.attend_time = DATE_FORMAT(#{param.attendTime}, '%T')</if>
                                        </if>
                                    </where>
                                    group by attend_map_log.examinee_cd, attend_map_log.log_dttm
                                    order by attend_map_log.examinee_cd, attend_map_log.log_dttm desc
                                ) a
                            inner join examinee on examinee.examinee_cd = a.examinee_cd
                            <where>
                                <if test="param != null">
                                    <if test="param.examineeCd != null"> and examinee.examinee_cd = #{param.examineeCd} </if>
                                    <if test="param.examineeNm != null"> and examinee.examinee_nm = #{param.examineeNm`} </if>
                                </if>
                            </where>
                            group by a.examinee_cd, a.attend_cd
                            order by a.attend_dttm
                    ) result
        inner join attend on attend.attend_cd = result.attend_cd
        inner join admission on admission.admission_cd = attend.admission_cd
        where cnt > 1
    </select>

    <select id="getAttendMapLog" resultType="com.humane.util.CamelMap">
        select attend_map_log.examinee_cd, examinee.examinee_nm, device.device_no
            , case when hall.head_nm is null then '' else hall.head_nm end as head_nm
            , case when hall.bldg_nm is null then '' else hall.bldg_nm end as bldg_nm
            , case when hall.hall_nm is null then '' else hall.hall_nm end as hall_nm
            , case when attend_map_log.attend_dttm is null then '' else attend_map_log.attend_dttm end as attend_dttm
            , attend_map_log.log_dttm
        from attend_map_log
        inner join examinee on examinee.examinee_cd = attend_map_log.examinee_cd
        inner join device on device.device_id = attend_map_log.device_id
        left join hall on hall.hall_cd = attend_map_log.attend_hall_cd
        <where>
            <if test="param != null">
                <if test="param.attendCd != null">and attend_map_log.attend_cd = #{param.attendCd}</if>
                <if test="param.examineeCd != null">and attend_map_log.examinee_cd = #{param.examineeCd}</if>
            </if>
        </where>
        order by attend_map_log.log_dttm desc
    </select>

    <select id="getAttendPaperLog" resultType="com.humane.util.CamelMap">
        select attend_paper_log.examinee_cd, examinee.examinee_nm, device.device_no
            , case when hall.head_nm is null then '' else hall.head_nm end as head_nm
            , case when hall.bldg_nm is null then '' else hall.bldg_nm end as bldg_nm
            , case when hall.hall_nm is null then '' else hall.hall_nm end as hall_nm
            , case when attend_paper_log.new_paper_cd is null then '' else attend_paper_log.new_paper_cd end as new_paper_cd
            , case when attend_paper_log.paper_cd is null then '' else attend_paper_log.paper_cd end as paper_cd
            , attend_paper_log.reg_dttm
            , attend_paper_log.log_dttm
        from attend_paper_log
        inner join examinee on examinee.examinee_cd = attend_paper_log.examinee_cd
        inner join device on device.device_id = attend_paper_log.device_id
        inner join hall on hall.hall_cd = attend_paper_log.hall_cd
        <where>
            <if test="param != null">
                <if test="param.attendCd != null">and attend_paper_log.attend_cd = #{param.attendCd}</if>
                <if test="param.examineeCd != null">and attend_paper_log.examinee_cd = #{param.examineeCd}</if>
            </if>
        </where>
        order by attend_paper_log.log_dttm desc
    </select>
</mapper>
