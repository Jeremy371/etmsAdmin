<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.humane.etms.mapper.DataMapper">
    <select id="examinee" resultType="com.humane.etms.dto.ExamineeDto">
        SELECT
        admission.admission_nm, attend.type_nm,
        attend.attend_date, attend.attend_time, attend.attend_cd,
        examinee.college_nm,
        examinee.examinee_cd, examinee.examinee_nm,
        date_format(examinee.birth, '%y-%m-%d') as birth, examinee.major_nm, examinee.dept_nm,
        CASE WHEN attend_hall.hall_cd IS NULL THEN false ELSE true END AS is_attend,
        hall.head_nm, hall.bldg_nm, hall.hall_cd, hall.hall_nm,
        attend_hall.head_nm AS attend_head_nm,
        attend_hall.bldg_nm AS attend_bldg_nm,
        attend_hall.hall_cd AS attend_hall_cd,
        attend_hall.hall_nm AS attend_hall_nm,
        attend_hall.is_etc,
        attend_map.is_check,
        CASE WHEN attend_map.attend_hall_cd IS NULL THEN NULL
              WHEN attend_map.attend_hall_cd != attend_map.hall_cd THEN true
              ELSE false
         END AS is_other_hall,
        attend_map.attend_dttm,
        attend_map.id_check_dttm,
        attend_map.recheck_dttm,

        CASE WHEN attend_hall.hall_cd IS NOT NULL THEN (SELECT paper_cd FROM attend_paper WHERE attend_paper.attend_cd = attend_map.attend_cd AND
        attend_paper.examinee_cd = attend_map.examinee_cd AND attend_paper.paper_no = 1 /*AND attend_map.attend_hall_cd IS NOT NULL*/
        ORDER BY reg_dttm DESC LIMIT 1) ELSE NULL END
        AS last_paper_cd,

        CASE WHEN (SELECT COUNT(*) FROM attend_paper WHERE attend_paper.attend_cd = attend_map.attend_cd AND
        attend_paper.examinee_cd = attend_map.examinee_cd AND attend_paper.paper_no = 1 AND attend_map.attend_hall_cd IS NOT NULL) > 1
        THEN 1 ELSE 0
        END AS is_change_paper,

        now() AS print_dttm,
        CASE WHEN (SELECT COUNT(*) FROM attend_paper WHERE attend_paper.examinee_cd = attend_map.examinee_cd) >= 1 AND attend_map.attend_dttm IS NULL
        THEN TRUE END AS isCancelAttend
        FROM
        attend_map
        INNER JOIN attend ON attend.attend_cd = attend_map.attend_cd
        INNER JOIN admission ON admission.admission_cd = attend.admission_cd
        INNER JOIN hall ON hall.hall_cd = attend_map.hall_cd
        INNER JOIN examinee ON examinee.examinee_cd = attend_map.examinee_cd
        LEFT JOIN hall attend_hall ON attend_hall.hall_cd = attend_map.attend_hall_cd
        <where>
            <if test="param != null">
                <if test="param.admissionNm != null">AND admission.admission_nm = #{param.admissionNm}</if>
                <if test="param.typeNm != null">AND attend.type_nm = #{param.typeNm}</if>
                <if test="param.attendDate != null">AND attend.attend_date = #{param.attendDate}</if>
                <if test="param.attendTime != null">AND attend.attend_time = DATE_FORMAT(#{param.attendTime}, '%T')</if>
                <if test="param.examineeCd != null">AND examinee.examinee_cd LIKE '%' #{param.examineeCd} '%'</if>
                <if test="param.examineeNm != null">AND examinee.examinee_nm LIKE '%' #{param.examineeNm} '%'</if>
                <if test="param.attendHeadNm != null">AND attend_hall.head_nm = #{param.attendHeadNm}</if>
                <if test="param.attendBldgNm != null">AND attend_hall.bldg_nm = #{param.attendBldgNm}</if>
                <if test="param.attendHallNm != null">AND attend_hall.hall_nm = #{param.attendHallNm}</if>
                <if test="param.headNm != null">AND hall.head_nm = #{param.headNm}</if>
                <if test="param.deptNm != null">AND examinee.dept_nm = #{param.deptNm}</if>
                <if test="param.majorNm != null">AND examinee.major_nm = #{param.majorNm}</if>
                <if test="param.bldgNm != null">AND hall.bldg_nm = #{param.bldgNm}</if>
                <!--<if test="param.hallNm != null">AND hall.hall_nm = #{param.hallNm}</if>-->
                <if test="param.hallNm != null">
                    AND
                        (hall.hall_nm = #{param.hallNm} OR attend_hall.hall_nm = #{param.hallNm})
                        AND(attend_hall.hall_nm IS NULL OR attend_hall.hall_nm = #{param.hallNm})
                </if>
                <if test="param.attendNm != null">AND attend.attend_nm = #{param.attendNm}</if>
                <if test="param.isEtc != null">AND attend_hall.is_etc = #{param.isEtc}</if>
                <if test="param.groupNm != null">AND attend_map.group_nm = #{param.groupNm}</if>
                <if test="param.isAttend != null">
                    <if test="param.isAttend == true">AND attend_map.attend_hall_cd IS NOT NULL</if>
                    <if test="param.isAttend == false">AND attend_map.attend_hall_cd IS NULL</if>
                </if>
                <if test="param.isOtherHall != null">
                    <if test="param.isOtherHall == true">AND (attend_map.attend_hall_cd IS NOT NULL AND
                        attend_map.attend_hall_cd != attend_map.hall_cd)
                    </if>
                    <if test="param.isOtherHall == false">AND (attend_map.attend_hall_cd IS NOT NULL AND
                        attend_map.attend_hall_cd = attend_map.hall_cd)
                    </if>
                </if>
                <if test="param.fromExamineeCd != null and param.toExamineeCd == null">AND attend_map.examinee_cd =
                    #{param.fromExamineeCd}
                </if>
                <if test="param.fromExamineeCd == null and param.toExamineeCd != null">AND attend_map.examinee_cd =
                    #{param.toExamineeCd}
                </if>
                <if test="param.fromExamineeCd != null and param.toExamineeCd != null">
                    AND examinee.examinee_cd BETWEEN #{param.fromExamineeCd} AND #{param.toExamineeCd}
                </if>
                <if test="param.isNoIdCard != null">AND attend_map.is_no_id_card = #{param.isNoIdCard}
                </if>
                <if test="param.isCheck != null">AND attend_map.is_check = #{param.isCheck}
                </if>
                <if test="param.isNoIdCardFilter != null">
                    <if test="param.isNoIdCardFilter == true">AND attend_map.id_check_dttm IS NOT NULL</if>
                    <if test="param.isNoIdCardFilter == false">AND attend_map.id_check_dttm IS NULL</if>
                </if>
                <if test="param.isCheckFilter != null">
                    <if test="param.isCheckFilter == true">AND attend_map.recheck_dttm IS NOT NULL</if>
                    <if test="param.isCheckFilter == false">AND attend_map.recheck_dttm IS NULL</if>
                </if>
                <if test="param.isCancelAttend != null">
                    <if test="param.isCancelAttend == true">AND (SELECT COUNT(*) FROM attend_paper WHERE attend_paper.examinee_cd = attend_map.examinee_cd) >= 1 AND attend_map.attend_dttm IS NULL
                    </if>
                </if>
                <if test="param.userAdmissions != null">AND attend.admission_cd IN (${param.userAdmissions})</if>
            </if>
        </where>
        GROUP BY
        examinee.examinee_cd, examinee.examinee_nm, examinee.birth,
        admission.admission_nm, attend.type_nm, attend.attend_date, attend.attend_time,
        examinee.major_nm, examinee.dept_nm,
        hall.hall_cd,
        attend_map.attend_hall_cd,
        attend_hall.is_etc, attend_map.is_check, attend_map.attend_dttm
    </select>

    <select id="signature" resultType="com.humane.etms.dto.StatusDto">
            SELECT admission.admission_nm
            , attend.attend_cd, attend.type_nm, attend.attend_date, attend.attend_time
            , hall.hall_cd, hall.head_nm, hall.bldg_nm, hall.hall_nm
            , CASE WHEN attend_hall.sign_dttm IS NULL THEN 0 ELSE 1 END AS is_signature
            , attend_hall.sign_dttm
            FROM attend_hall
            INNER JOIN attend ON attend_hall.attend_cd = attend.attend_cd
            INNER JOIN admission ON attend.admission_cd = admission.admission_cd
            INNER JOIN hall ON attend_hall.hall_cd = hall.hall_cd
            <where>
                <if test="param != null">
                    <if test="param.admissionNm != null">AND admission.admission_nm = #{param.admissionNm}</if>
                    <if test="param.typeNm != null">AND attend.type_nm = #{param.typeNm}</if>
                    <if test="param.attendDate != null">AND attend.attend_date = #{param.attendDate}</if>
                    <if test="param.attendTime != null">AND attend.attend_time = DATE_FORMAT(#{param.attendTime}, '%T')</if>
                    <if test="param.headNm != null">AND hall.head_nm = #{param.headNm}</if>
                    <if test="param.bldgNm != null">AND hall.bldg_nm = #{param.bldgNm}</if>
                    <if test="param.hallNm != null">AND hall.hall_nm = #{param.hallNm}</if>
                    <if test="param.isSignature != null">
                        <if test="param.isSignature == true">AND attend_hall.sign_dttm IS NOT NULL</if>
                        <if test="param.isSignature == false">AND attend_hall.sign_dttm IS NULL</if>
                    </if>
                    <if test="param.userAdmissions != null">AND attend.admission_cd IN (${param.userAdmissions})</if>
                </if>
            </where>
    </select>

    <select id="paper" resultType="com.humane.etms.dto.StatusDto">
        SELECT *
        FROM
            (SELECT admission.admission_nm
            , attend.type_nm
            , attend.attend_date
            , attend.attend_time
            , examinee.dept_nm
            , examinee.major_nm
            , examinee.examinee_cd
            , examinee.examinee_nm
            , date_format(examinee.birth, '%y-%m-%d') as birth
            , (SELECT COUNT(*) FROM attend_paper WHERE attend_paper.attend_cd = attend_map.attend_cd and
            attend_paper.examinee_cd = attend_map.examinee_cd and attend_paper.paper_no = 1) AS paper_cnt
            , (SELECT paper_cd FROM attend_paper WHERE attend_paper.attend_cd = attend_map.attend_cd and
            attend_paper.examinee_cd = attend_map.examinee_cd and attend_paper.paper_no = 1 ORDER BY reg_dttm ASC LIMIT 1)
            AS first_paper_cd
            , (SELECT paper_cd FROM attend_paper WHERE attend_paper.attend_cd = attend_map.attend_cd and
            attend_paper.examinee_cd = attend_map.examinee_cd and attend_paper.paper_no = 1 ORDER BY reg_dttm DESC LIMIT 1)
            AS last_paper_cd
            , (SELECT GROUP_CONCAT(paper_cd ORDER BY reg_dttm SEPARATOR ', ') FROM attend_paper WHERE attend_paper.attend_cd =
            attend_map.attend_cd and attend_paper.examinee_cd = attend_map.examinee_cd and attend_paper.paper_no = 1) AS
            paper_list
            , (SELECT MAX(reg_dttm) FROM attend_paper WHERE attend_paper.attend_cd = attend_map.attend_cd and
            attend_paper.examinee_cd = attend_map.examinee_cd and attend_paper.paper_no = 1) AS last_dttm
            FROM attend_paper
            INNER JOIN attend ON attend.attend_cd = attend_paper.attend_cd
            INNER JOIN attend_map ON attend_map.attend_cd = attend_paper.attend_cd AND attend_map.examinee_cd = attend_paper.examinee_cd
            INNER JOIN admission ON admission.admission_cd = attend.admission_cd
            INNER JOIN examinee ON examinee.examinee_cd = attend_paper.examinee_cd
            <where>
                <if test="param != null">
                    <if test="param.admissionNm != null">AND admission.admission_nm = #{param.admissionNm}</if>
                    <if test="param.typeNm != null">AND examinee.type_nm = #{param.typeNm}</if>
                    <if test="param.attendDate != null">AND attend.attend_date = #{param.attendDate}</if>
                    <if test="param.attendTime != null">AND attend.attend_time = DATE_FORMAT(#{param.attendTime}, '%T')</if>
                    <if test="param.deptNm != null">AND examinee.dept_nm = #{param.deptNm}</if>
                    <if test="param.majorNm != null">AND examinee.major_nm = #{param.majorNm}</if>
                    <if test="param.examineeCd != null">AND examinee.examinee_cd = #{param.examineeCd}</if>
                    <if test="param.examineeNm != null">AND examinee.examinee_nm = #{param.examineeNm}</if>
                    <if test="param.paperCd != null">AND
                        ( SELECT GROUP_CONCAT(paper_cd ORDER BY reg_dttm SEPARATOR ', ')
                        FROM attend_paper
                        WHERE attend_paper.attend_cd = attend_map.attend_cd
                        and attend_paper.examinee_cd = attend_map.examinee_cd
                        and attend_paper.paper_no = 1
                        ) LIKE '%' #{param.paperCd} '%'
                    </if>
                    <if test="param.userAdmissions != null">AND attend.admission_cd IN (${param.userAdmissions})</if>
                </if>
            </where>
            GROUP BY
            attend.type_nm
            , attend.attend_date
            , attend.attend_time
            , examinee.dept_nm
            , examinee.major_nm
            , examinee.examinee_cd
            , examinee.examinee_nm
            , examinee.birth
            ) AS result
            WHERE paper_cnt > 1
    </select>

    <select id="detail" resultType="com.humane.etms.dto.StatusDto">
        SELECT
        examinee.examinee_cd,
        examinee.examinee_nm,
        examinee.dept_nm,
        hall.bldg_nm,
        hall.hall_nm,
        attend_paper.paper_cd,
        attend_paper.paper_no,
        concat(attend.attend_date,' ',attend.attend_time) as attend_d_t,
        attend_paper.reg_dttm
        FROM attend_paper
        INNER JOIN attend ON attend.attend_cd = attend_paper.attend_cd
        INNER JOIN hall ON hall.hall_cd = attend_paper.hall_cd
        INNER JOIN examinee ON examinee.examinee_cd = attend_paper.examinee_cd
        <where>
            <if test="param!=null">
                <if test="param.examineeCd != null">examinee.examinee_cd = #{param.examineeCd}</if>
                <if test="param.userAdmissions != null">AND attend.admission_cd IN (${param.userAdmissions})</if>
            </if>
        </where>
    </select>

    <update id="checkIdCard">
        UPDATE attend_map
           SET id_check_dttm = #{idCheckDttm}
         WHERE examinee_cd = #{examineeCd} and attend_cd = #{attendCd}
    </update>

    <update id="recheck">
        UPDATE attend_map
        SET recheck_dttm = #{recheckDttm}
        WHERE examinee_cd = #{examineeCd} and attend_cd = #{attendCd}
    </update>

    <select id="sendPaperInfo" resultType="com.humane.etms.dto.ExamineeDto">
        SELECT examinee.examinee_cd, examinee.examinee_nm
             , IF(attend_map.attend_hall_cd is not null, true, false) as is_attend
             , attend.attend_date
             , attend.attend_time
             , (SELECT attend_paper.paper_cd
                  FROM attend_paper
                 WHERE attend_paper.attend_cd = attend_map.attend_cd
                   AND attend_paper.examinee_cd = attend_map.examinee_cd
                   AND attend_map.attend_hall_cd IS NOT NULL
                 ORDER BY attend_paper.reg_dttm DESC
                 LIMIT 1
                ) as paper_cd
             , (select univ_hall_cd from attend_hall where hall_cd=attend_map.hall_cd and attend_cd = attend_map.attend_cd) as hall_cd
             , h1.hall_nm
             , (select univ_hall_cd from attend_hall where hall_cd=attend_map.attend_hall_cd and attend_cd = attend_map.attend_cd) as attend_hall_cd
             , h2.hall_nm as attend_hall_nm
          FROM attend_map
         INNER JOIN attend ON attend.attend_cd = attend_map.attend_cd and attend.paper_cnt > 0
         INNER JOIN examinee ON attend_map.examinee_cd = examinee.examinee_cd
         INNER JOIN hall h1 ON attend_map.hall_cd = h1.hall_cd
          LEFT JOIN hall h2 ON attend_map.attend_hall_cd = h2.hall_cd
        <where>
            <if test="param!=null">
                <if test="param.userAdmissions != null">AND attend.admission_cd IN (${param.userAdmissions})</if>
            </if>
        </where>
    </select>

    <select id="cancelAttend" resultType="com.humane.etms.dto.ExamineeDto">
        select admission.admission_nm, attend.type_nm
              , examinee.dept_nm, examinee.major_nm
              , examinee.examinee_cd, examinee.examinee_nm, examinee.birth
              , hall.head_nm, hall.bldg_nm, hall.hall_nm,
              (SELECT attend_paper.paper_cd
              FROM attend_paper
              WHERE attend_paper.attend_cd = attend_map.attend_cd
                AND attend_paper.examinee_cd = attend_map.examinee_cd
              ORDER BY attend_paper.reg_dttm DESC
              LIMIT 1
               ) as last_paper_cd
                , attend_map.attend_dttm
        from attend_map
        inner join attend on attend.attend_cd = attend_map.attend_cd
        inner join hall on hall.hall_cd = attend_map.hall_cd
        inner join admission on admission.admission_cd = attend.admission_cd
        inner join examinee on examinee.examinee_cd = attend_map.examinee_cd
        left join attend_paper on attend_paper.examinee_cd = attend_map.examinee_cd and attend_map.attend_cd = attend_paper.attend_cd
        <where> and attend_map.attend_dttm is null and attend_paper.paper_cd is not null
            <if test="param!=null">
                <if test="param.userAdmissions != null">AND attend.admission_cd IN (${param.userAdmissions})</if>
            </if>
        </where>
    </select>
    <select id="sqlEdit" resultType="java.util.LinkedHashMap">
        ${sql}
    </select>
</mapper>